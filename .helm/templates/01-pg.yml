apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.pg.name }}
  namespace: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.pg.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.pg.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.pg.name }}
    spec:
      containers:
      - name: {{ .Values.pg.name }}
        args: [ "-c", "config_file=/etc/postgresql/postgresql.conf"]
        image: {{ .Values.pg.containers.image }}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.pg.name }}-secret
              key: POSTGRES_USER
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ .Values.pg.name }}-secret
              key: POSTGRES_DB
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.pg.name }}-secret
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
          name: {{ .Values.pg.name }}
        resources: {{ .Values.pg.resources | toYaml | nindent 10 }}
        volumeMounts:
        - name: {{ .Values.pg.name }}-pvc
          mountPath: /var/lib/postgresql
          subPath: data
        - name: {{ .Values.pg.name }}-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
      volumes:
      - name: {{ .Values.pg.name }}-pvc
        persistentVolumeClaim:
          claimName: {{ .Values.pg.name }}-pvc
      - name: {{ .Values.pg.name }}-config
        configMap:
          name: {{ .Values.pg.name }}-config

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.pg.name }}-service
  namespace: {{ .Values.app.name }}
spec:
  selector:
    app: {{ .Values.pg.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.pg.port }}
      targetPort: {{ .Values.pg.port }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.pg.name }}-pvc
  namespace: {{ .Values.app.name }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ebs-sc
  resources:
    requests:
      storage: 1Gi
    
---

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.pg.name }}-secret
  namespace: {{ .Values.app.name }}
type: Opaque
data:
  POSTGRES_USER: {{ .Values.pg.values.user | b64enc }}
  POSTGRES_PASSWORD: {{ .Values.pg.values.password | b64enc }}
  POSTGRES_DB: {{ .Values.pg.values.db | b64enc }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.pg.name }}-config
  namespace: {{ .Values.app.name }}
  labels:
    app: {{ .Values.pg.name }}
data:
  postgresql.conf: |
    listen_addresses = '*'
    log_line_prefix = '%m [%p] %q%u@%d '
    default_text_search_config = 'pg_catalog.english'
    dynamic_shared_memory_type = posix
    lc_messages = 'C.UTF-8'
    lc_monetary = 'C.UTF-8'
    lc_numeric = 'C.UTF-8'
    lc_time = 'C.UTF-8'
    log_timezone = 'UTC'
    timezone = 'UTC'
    datestyle = 'iso, mdy'
    max_connections = 1000
    max_wal_size = 1GB
    min_wal_size = 80MB
    shared_buffers = 128MB
    shared_preload_libraries = 'pg_stat_statements'
    pg_stat_statements.track = all
    max_stack_depth = 7MB
